" ___vital___
" NOTE: lines between '" ___vital___' is generated by :Vitalize.
" Do not mofidify the code nor insert new lines before '" ___vital___'
if v:version > 703 || v:version == 703 && has('patch1170')
  function! vital#_giit#System#Process#Mock#import() abort
    return map({'execute': '', 'is_supported': '', 'is_available': ''},  'function("s:" . v:key)')
  endfunction
else
  function! s:_SID() abort
    return matchstr(expand('<sfile>'), '<SNR>\zs\d\+\ze__SID$')
  endfunction
  execute join(['function! vital#_giit#System#Process#Mock#import() abort', printf("return map({'execute': '', 'is_supported': '', 'is_available': ''}, \"function('<SNR>%s_' . v:key)\")", s:_SID()), 'endfunction'], "\n")
  delfunction s:_SID
endif
" ___vital___
let s:save_cpoptions = &cpoptions
set cpoptions&vim

function! s:is_available() abort
  return 1
endfunction

function! s:is_supported(options) abort
  return 1
endfunction

function! s:execute(args, options) abort
  if a:options.debug > 0
    echomsg printf(
          \ 'vital: System.Process.Mock: %s',
          \ join(a:args)
          \)
  endif
  return {
        \ 'status': 0,
        \ 'output': 'Output of System.Process.Mock',
        \}
endfunction

let &cpoptions = s:save_cpoptions
unlet s:save_cpoptions
